pipeline {
    agent any
    tools {
                // Install the Maven version configured as "M2_HOME" and add it to the path.
                maven "M2_HOME"
            }

                  environment {
                               NEXUS_VERSION = "nexus3"
                               NEXUS_PROTOCOL = "http"
                               NEXUS_URL = "192.168.43.222:8081"
                               NEXUS_REPOSITORY = "Team1-Devops"
                               NEXUS_CREDENTIAL_ID = "Nexus-Credential"
                                    }

    stages {
        stage('Clone From Git') {
            steps {
                git branch: 'hanen_branch',
                url: 'https://github.com/AS-Byte/team1_devops_project.git',
                credentialsId: 'jenkins-assurance-token'
                   }
                        }


        stage('Mvn-ClEAN') {
            steps {
                 sh """mvn clean install"""
                    }
                            }
        stage('Mvn-COMPILE') {
            steps {
                  sh """mvn compile"""
                   }
                              }

                  stage('Mvn-Build') {
                              steps {
                              script{

                              sh """mvn -Dmaven.test.failure.ignore=true clean package"""
                              }

                                     }
                                     }

                  stage('Mvn-Test') {
                                     steps {
                                           script{

                                          sh """mvn test"""
                                                   }

                                                 }
                                       }



        stage('Mvn-SONARQUBE') {
            steps {
            withSonarQubeEnv(installationName: 'sq2')
                {sh """mvn sonar:sonar"""}

                   }
                              }




         stage('Build Docker Image'){
                 steps {

                   sh """ docker build -t azzouzhanen2023/team1:0.0.1 ."""

                     }
                                            }

         stage('Push Docker Image'){
                 steps {
                    withCredentials([string(credentialsId: 'DockerHub-pwd', variable: 'dockerhubPWD')]){
                   sh " docker login -u azzouzhanen2023 -p ${dockerhubPWD}"
                   }
                   sh 'docker push  azzouzhanen2023/team1:0.0.1 '

                     }
                                            }













    }
   }
