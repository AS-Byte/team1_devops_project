pipeline {
    agent any
    tools {
          // Install the Maven version configured as "M2_HOME" and add it to the path.
          maven 'MAVEN_HOME'
          jdk 'JAVA_HOME'
        }
    environment {
           NEXUS_VERSION = "nexus3"
           NEXUS_PROTOCOL = "http"
           NEXUS_URL = "192.168.17.200:8081"
           NEXUS_REPOSITORY = "Team1-Devops"
           NEXUS_CREDENTIAL_ID = "NEXUS_CRED"
    }

    stages {
       stage('Connect to Git') {
            steps {
                git branch: 'amine_branch',
                url: 'https://github.com/AS-Byte/team1_devops_project.git',
                credentialsId: 'git_pwd_pat'
            }
       }

       stage('MVN-CLEAN') {
                       steps {
                           sh """mvn clean install"""
                       }
                  }

       stage('MVN-BUILD') {
            steps {
                script{
                    sh """mvn -Dmaven.test.failure.ignore=true clean package"""
                }
            }
       }
       stage('MVN-TEST') {
           steps {
               script{
                   sh """mvn test"""
               }
           }
       }

       stage('MVN-SONARQUBE') {
           steps {
               withSonarQubeEnv('SonarQube'){
                   sh """mvn sonar:sonar -Pcoverage"""
               }
           }
       }

       stage('Build Docker image') {
                          steps {
                              sh 'docker build -t asbyte/my-image .'
                          }
                      }
      stage('Push Docker image to hub') {
          steps {
               withCredentials([string(credentialsId:"dockerhub-pwd-only", variable: "dockerhubpwd")]){
                   sh 'docker login -u asbyte -p ${dockerhubpwd}'
               }
               sh "docker push asbyte/my-image"
          }
      }
      stage('docker-compose'){
          steps {
            sh 'docker-compose up'
          }
      }

    }
}
